{
  "jaix.experiment.ExperimentConfig": {
    "runner_class": "jaix.runner.ask_tell.ask_tell_runner.ATRunner",
    "runner_config": {
      "jaix.runner.ask_tell.ask_tell_runner.ATRunnerConfig": {
        "max_evals": 5000,
        "disp_interval": 1000
      }
    },
    "logging_config": {
      "jaix.experiment.LoggingConfig": {
        "log_level": 40
      }
    },
    "env_config": {
      "jaix.environment_factory.EnvironmentConfig": {
        "suite_class": "jaix.suite.ec_suite.ECSuite",
        "suite_config": {
          "jaix.suite.ec_suite.ECSuiteConfig": {
            "func_classes": [
              "jaix.env.utils.problem.rbf_fit.RBFFit"
            ],
            "func_configs": [
              {
                "jaix.env.utils.problem.rbf_fit.RBFFitConfig": {
                  "rbf_config": {
                    "jaix.env.utils.problem.rbf.rbf_adapter.RBFAdapterConfig": {
                      "num_rad_range": [
                        15,
                        25
                      ],
                      "ratio_x_range": [
                        0.25,
                        0.5
                      ],
                      "num_measure_points": 2000,
                      "num_true_measure_points": 2000,
                      "x_val_range": [
                        -10,
                        10
                      ],
                      "y_val_range": [
                        1,
                        4
                      ],
                      "noisy": true
                    }
                  },
                  "precision": 1e-8
                }
              }
            ],
            "env_config": {
              "jaix.env.singular.ec_env.ECEnvironmentConfig": {
                "budget_multiplier": 1000
              }
            },
            "agg_instances": 1
          }
        },
        "env_wrappers": [
          [
            "jaix.env.wrapper.any_fit_wrapper.AnyFitWrapper",
            {}
          ]
        ]
      }
    },
    "opt_class": "jaix.runner.ask_tell.at_optimiser.ATOptimiser",
    "opt_config": {
      "jaix.runner.ask_tell.at_optimiser.ATOptimiserConfig": {
        "strategy_class": "jaix.runner.ask_tell.strategy.cma.CMA",
        "strategy_config": {
          "jaix.runner.ask_tell.strategy.cma.CMAConfig": {
            "sigma0": 2,
            "opts": {
              "popsize_factor": 1
            },
            "warm_start_best": true
          }
        },
        "init_pop_size": 1
      }
    }
  }
}
